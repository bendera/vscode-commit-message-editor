{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://bendera.github.com/vscode-commit-message-editor/schemas/config-v1.schema.json",
  "title": "Commit Message Editor configuration",
  "description": "Schema for VSCode Commit Message Editor extension shareable configuration",
  "type": "object",
  "properties": {
    "configVersion": {
      "type": "string"
    },
    "staticTemplate": {
      "type": "array",
      "title": "Static template",
      "description": "Commit message template for the text view. Every line is an item in the array.",
      "default": [
        "feat: Short description",
        "",
        "Message body",
        "",
        "Message footer"
      ],
      "items": {
        "type": "string"
      }
    },
    "dynamicTemplate": {
      "type": "array",
      "title": "Dynamic template",
      "description": "Commit message template for the form view. Every line is an item in the array. Tokens are enclosed in curly brackets.",
      "default": [
        "{type}{scope}: {description}",
        "",
        "{body}",
        "",
        "{breaking_change}{footer}"
      ],
      "items": {
        "type": "string"
      }
    },
    "tokens": {
      "type": "array",
      "title": "Tokens",
      "description": "Define form widgets for the form view.",
      "items": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "title": "Token label",
            "description": "The visible label of the token in the form view."
          },
          "name": {
            "type": "string",
            "title": "Token name",
            "description": "The template variable name in the dynamic template."
          },
          "type": {
            "type": "string",
            "enum": [
              "enum",
              "text",
              "boolean"
            ],
            "title": "Token type",
            "description": "The token type determines what kind of form widget is displayed in the form. Enum: select dropdown, text: textfield or textarea, boolean: checkbox.",
            "default": "text"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Helper text for the token."
          },
          "prefix": {
            "type": "string",
            "title": "Prefix",
            "description": "A text that will be prepended to the value if the value is not empty."
          },
          "suffix": {
            "type": "string",
            "title": "Suffix",
            "description": "A text that will be appended to the value if the value is not empty."
          },
          "multiline": {
            "type": "boolean",
            "title": "Multiline",
            "description": "Multiline text input"
          },
          "lines": {
            "type": "number",
            "title": "Lines",
            "description": "Multiline text input initial height in lines"
          },
          "maxLines": {
            "type": "number",
            "title": "Max Lines",
            "description": "Multiline text input maximum height in lines"
          },
          "maxLength": {
            "type": "number",
            "title": "Max Length",
            "description": "Maximum length of the value"
          },
          "multiple": {
            "type": "boolean",
            "title": "Multiple",
            "description": "Multiple enum options"
          },
          "separator": {
            "type": "string",
            "title": "Separator",
            "description": "Separator text when multiple options were selected"
          },
          "combobox": {
            "type": "boolean",
            "title": "Combobox",
            "description": "Filterable enum options selector"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "The visible representation of the option. If the value is not defined the label will be the value."
                },
                "value": {
                  "type": "string",
                  "description": "The value of the option. If it's not defined the value will be the label."
                },
                "description": {
                  "type": "string",
                  "description": "Helper text for the option."
                }
              },
              "required": [
                "label"
              ]
            }
          }
        },
        "required": [
          "label",
          "name"
        ]
      }
    }
  },
  "required": [
    "configVersion",
    "staticTemplate",
    "dynamicTemplate",
    "tokens"
  ]
}
