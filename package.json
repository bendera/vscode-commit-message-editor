{
  "name": "commit-message-editor",
  "displayName": "Commit Message Editor",
  "description": "Edit commit messages in a convenient way.",
  "version": "0.24.3",
  "license": "MIT",
  "preview": false,
  "publisher": "adam-bender",
  "engines": {
    "vscode": "^1.70.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "git",
    "vcs",
    "semantic",
    "conventional",
    "commit"
  ],
  "icon": "icon.png",
  "repository": {
    "url": "https://github.com/bendera/vscode-commit-message-editor"
  },
  "activationEvents": [
    "onCommand:commitMessageEditor.openEditor",
    "onCommand:commitMessageEditor.copyFromSCMInputBox",
    "onCommand:commitMessageEditor.openSettingsPage",
    "onWebviewPanel:copyFromExtensionMessageBox"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "commitMessageEditor.openEditor",
        "title": "Open commit message editor",
        "category": "Git",
        "icon": "$(edit)"
      },
      {
        "command": "commitMessageEditor.copyFromSCMInputBox",
        "title": "Copy text from SCM input box",
        "category": "Git"
      },
      {
        "command": "commitMessageEditor.loadTemplate",
        "title": "Load template",
        "category": "Git"
      },
      {
        "command": "commitMessageEditor.openSettingsPage",
        "title": "Open Settings Page",
        "category": "Commit Message Editor"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "commitMessageEditor.openEditor",
          "group": "navigation@1",
          "title": "Edit",
          "when": "scmProvider == git"
        },
        {
          "command": "commitMessageEditor.openEditor",
          "group": "inline",
          "title": "Edit",
          "when": "scmProvider == git"
        }
      ]
    },
    "configuration": {
      "title": "Commit Message Editor",
      "properties": {
        "commit-message-editor.confirmAmend": {
          "type": "boolean",
          "description": "Confirm amend commit",
          "default": true
        },
        "commit-message-editor.dynamicTemplate": {
          "type": "array",
          "description": "Template for the form view. You can refer to tokens in {token_name} format.",
          "items": {
            "type": "string"
          },
          "default": [
            "{type}{scope}: {description}",
            "",
            "{body}",
            "",
            "{breaking_change}{footer}"
          ]
        },
        "commit-message-editor.staticTemplate": {
          "type": "array",
          "description": "Template for the text view.",
          "items": {
            "type": "string"
          },
          "default": [
            "feat: Short description",
            "",
            "Message body",
            "",
            "Message footer"
          ]
        },
        "commit-message-editor.tokens": {
          "type": "array",
          "description": "Editable inputs in the form view",
          "default": [
            {
              "label": "Type",
              "name": "type",
              "type": "enum",
              "options": [
                {
                  "label": "---",
                  "value": ""
                },
                {
                  "label": "build",
                  "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
                },
                {
                  "label": "chore",
                  "description": "Updating grunt tasks etc; no production code change"
                },
                {
                  "label": "ci",
                  "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
                },
                {
                  "label": "docs",
                  "description": "Documentation only changes"
                },
                {
                  "label": "feat",
                  "description": "A new feature"
                },
                {
                  "label": "fix",
                  "description": "A bug fix"
                },
                {
                  "label": "perf",
                  "description": "A code change that improves performance"
                },
                {
                  "label": "refactor",
                  "description": "A code change that neither fixes a bug nor adds a feature"
                },
                {
                  "label": "revert"
                },
                {
                  "label": "style",
                  "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
                },
                {
                  "label": "test",
                  "description": "Adding missing tests or correcting existing tests"
                }
              ],
              "description": "Type of changes"
            },
            {
              "label": "Scope",
              "name": "scope",
              "description": "A scope may be provided to a commitâ€™s type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
              "type": "text",
              "multiline": false,
              "prefix": "(",
              "suffix": ")"
            },
            {
              "label": "Short description",
              "name": "description",
              "description": "Short description in the subject line.",
              "type": "text",
              "multiline": false
            },
            {
              "label": "Body",
              "name": "body",
              "description": "Optional body",
              "type": "text",
              "multiline": true,
              "lines": 5,
              "maxLines": 10
            },
            {
              "label": "Breaking change",
              "name": "breaking_change",
              "type": "boolean",
              "value": "BREAKING CHANGE: ",
              "default": false
            },
            {
              "label": "Footer",
              "name": "footer",
              "description": "Optional footer",
              "type": "text",
              "multiline": true
            }
          ]
        },
        "commit-message-editor.reduceEmptyLines": {
          "type": "boolean",
          "default": true,
          "description": "If more than two empty lines follow each other, only the first two lines will be kept. The last line also will be removed if it is empty."
        },
        "commit-message-editor.view.columnToShowIn": {
          "type": "string",
          "enum": [
            "Active",
            "Beside",
            "One",
            "Two",
            "Three",
            "Four",
            "Five",
            "Six",
            "Seven",
            "Eight",
            "Nine"
          ],
          "enumDescriptions": [
            "Open in the active column",
            "Open next to the active column",
            "Open in the first column",
            "Open in the second column",
            "Open in the third column",
            "Open in the fourth column",
            "Open in the fifth column",
            "Open in the sixth column",
            "Open in the seventh column",
            "Open in the eighth column",
            "Open in the ninth column"
          ],
          "description": "In which column the editor should open",
          "default": "Active"
        },
        "commit-message-editor.view.defaultView": {
          "type": "string",
          "default": "text",
          "enum": [
            "text",
            "form"
          ]
        },
        "commit-message-editor.view.visibleViews": {
          "type": "string",
          "default": "both",
          "enum": [
            "text",
            "form",
            "both"
          ]
        },
        "commit-message-editor.view.fullWidth": {
          "type": "boolean",
          "description": "The editor fills the whole available space.",
          "default": false
        },
        "commit-message-editor.view.useMonospaceEditor": {
          "type": "boolean",
          "description": "Use monospace font in the text view",
          "default": false
        },
        "commit-message-editor.view.tabSize": {
          "type": "number",
          "description": "Tab size in the monospace editor",
          "default": 4
        },
        "commit-message-editor.view.useTabs": {
          "type": "boolean",
          "description": "Use tabs for indentation in the monospace editor",
          "default": false
        },
        "commit-message-editor.view.rulers": {
          "type": "array",
          "description": "Render vertical rulers after a certain number of monospace characters in the monospace editor. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
          "default": [
            50,
            72
          ]
        },
        "commit-message-editor.view.visibleLines": {
          "type": "number",
          "description": "Visible lines in the text view",
          "default": 10
        },
        "commit-message-editor.view.showRecentCommits": {
          "type": "boolean",
          "description": "Show recent commits in the main view.",
          "default": true
        },
        "commit-message-editor.view.saveAndClose": {
          "type": "boolean",
          "description": "Close commit message editor tab after saving",
          "default": false
        }
      }
    }
  },
  "scripts": {
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "vscode:prepublish": "npm run compile",
    "compile": "npm run compile:extension && npm run compile:frontend",
    "compile:frontend": "cd frontend && npm run build",
    "compile:extension": "npm run esbuild-base -- --minify",
    "watch": "npm run esbuild-base -- --sourcemap --watch",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js",
    "wdio": "wdio run ./wdio.conf.ts"
  },
  "extensionDependencies": [
    "vscode.git"
  ],
  "devDependencies": {
    "@types/glob": "^8.0.1",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.11.18",
    "@types/vscode": "^1.70.0",
    "@vscode/vsce": "^2.19.0",
    "@wdio/cli": "^8.6.7",
    "@wdio/local-runner": "^8.6.7",
    "@wdio/mocha-framework": "^8.6.6",
    "@wdio/spec-reporter": "^8.6.6",
    "chromedriver": "^111.0.0",
    "esbuild": "^0.17.5",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "semver": "^7.5.0",
    "ts-node": "^10.9.1",
    "tslint": "^6.1.2",
    "typescript": "^4.9.5",
    "vscode-test": "^1.5.2",
    "wdio-chromedriver-service": "^8.1.1",
    "wdio-vscode-service": "^5.0.0"
  },
  "dependencies": {
    "ajv": "^8.12.0",
    "vscode-codicons": "0.0.17"
  }
}
